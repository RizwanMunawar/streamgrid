name: Publish to PyPI
on:
  push:
    tags:
      - 'v*'
jobs:
  publish:
    runs-on: ubuntu-latest
    if: github.actor == 'RizwanMunawar'
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
        
    - name: Build package
      run: python -m build
      
    - name: Check if version exists on PyPI
      id: check_version
      run: |
        # Extract package info from built wheel
        WHEEL_FILE=$(ls dist/*.whl | head -1)
        PACKAGE_NAME=$(basename "$WHEEL_FILE" | cut -d'-' -f1)
        PACKAGE_VERSION=$(basename "$WHEEL_FILE" | cut -d'-' -f2)
        
        echo "Checking package: $PACKAGE_NAME version $PACKAGE_VERSION"
        
        # Check if version exists on PyPI
        HTTP_CODE=$(curl -s -o /dev/null -w "%{http_code}" "https://pypi.org/pypi/$PACKAGE_NAME/$PACKAGE_VERSION/json/")
        
        if [ "$HTTP_CODE" = "200" ]; then
          echo "version_exists=true" >> $GITHUB_OUTPUT
          echo "❌ Package $PACKAGE_NAME version $PACKAGE_VERSION already exists on PyPI"
        else
          echo "version_exists=false" >> $GITHUB_OUTPUT
          echo "✅ Package $PACKAGE_NAME version $PACKAGE_VERSION is new, proceeding with publish"
        fi
        
    - name: Skip publishing
      if: steps.check_version.outputs.version_exists == 'true'
      run: |
        echo "⚠️ Skipping publication: Version already exists on PyPI"
        exit 0
        
    - name: Publish to PyPI
      if: steps.check_version.outputs.version_exists == 'false'
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
